EduData.w.Loc[order(EduData.w.Loc$Location.Name, EduData.w.Loc$enrollyear)]
EduData.w.Loc[order(EduData.w.Loc$Location.Name, EduData.w.Loc$enrollyear),]
school.data = read.csv("School Data.csv")
school.data = read.csv("School Data.csv")
EduData.w.Loc = merge(alldata, school.data, by = "Location.Name", all.x = TRUE)
EduData.w.Loc[order(EduData.w.Loc$Location.Name, EduData.w.Loc$enrollyear),]
write.csv(EduData.w.Loc, "Education_Data_wLoc")
write.csv(EduData.w.Loc, "Education_Data_wLoc.csv")
knitr::opts_chunk$set(echo = TRUE)
head(small.education)
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Projects/Detroit Project/detroit-crime-education/data/clean/Education")
education <- read.csv("Education_Data_wLoc.csv")
colnames(education)
head(education)
#Dropping is not meaningful for factors, hence converting factors to chars
head(education)
education$School.Name = as.character(education$School.Name)
education$Location.Name = as.character(education$Location.Name)
education$Rate.Year = as.character(education$Rate.Year)
write.csv("Education_Data_wLoc.csv")
colnames(education)
drops <- names(education) %in% c("Rate.Year", "OffTrack.Other","Graduation.Rate", "Dropout.Rate", "Location.Name")
small.education <- education[!drops]
#dim(small.education) /#Same 1426 rows
#Convert factors to characters
head(small.education)
clean.education=aggregate(small.education, by=list(small.education$enrollyear, small.education$ZIP.Code, small.education$School.Name), FUN=max)
head(clean.education)
#Re-order columns
#clean.education = clean.education["enrollyear"," "," "]
#rename columns
colnames(clean.education)
#Save to file
colnames(clean.education)
dim(clean.education)
colnames(education)
colnames(clean.education)# =c(" "," ", " ", " "," ")
clean.education = clean.education["enrollyear", "School.Name", "Cohort.Graduation.Year", "gradyear", "Total.Cohort", "Total.Graduated", "Dropouts", "ZIP.Code", "Latitude", "Longtitude"]
clean.education = clean.education[,"enrollyear", "School.Name", "Cohort.Graduation.Year", "gradyear", "Total.Cohort", "Total.Graduated", "Dropouts", "ZIP.Code", "Latitude", "Longtitude"]
clean.education = clean.education[,"enrollyear", "School.Name", "Cohort.Graduation.Year", "gradyear", "Total.Cohort", "Total.Graduated", "Dropouts", "ZIP.Code", "Latitude", "Longtitude"]
clean.education = clean.education[,"enrollyear", "School.Name", "Cohort.Graduation.Year", "gradyear", "Total.Cohort", "Total.Graduated", "Dropouts", "ZIP.Code", "Latitude", "Longtitude"]
clean.education = clean.education["enrollyear", "School.Name", "Cohort.Graduation.Year", "gradyear", "Total.Cohort", "Total.Graduated", "Dropouts", "ZIP.Code", "Latitude", "Longtitude"]
keep =c("enrollyear", "School.Name", "Cohort.Graduation.Year", "gradyear", "Total.Cohort", "Total.Graduated", "Dropouts", "ZIP.Code", "Latitude", "Longtitude")
clean.education = clean.education[keep]
colnames(clean.education)# =c(" "," ", " ", " "," ")
keep =c("enrollyear", "School.Name", "Cohort.Graduation.Year", "gradyear", "Total.Cohort", "Total.Graduated", "Dropouts", "ZIP.Code", "Latitude", "Longitude")
clean.education = clean.education[keep]
colnames(clean.education)# =c(" "," ", " ", " "," ")
colnames(clean.education) =c("ENROLL.YEAR","SCHOOL.NAME", "COHORT.GRAD.YEAR", "GRAD.YEAR","NUM.COHORT","NUM_GRADUATES", "NUM_DROPOUTS","ZIP","LATITUDE","LONGITUDE")
clean.education$GRAD.RATE = clean.education$NUM_GRADUATES/clean.education$NUM.COHORT
clean.education$DROP.RATE = clean.education$NUM_DROPOUTS/clean.education$NUM.COHORT
dim(clean.education)
View(clean.education)
colnames(clean.education) =c("ENROLL_YEAR","SCHOOL_NAME", "COHORT_GRAD_YEAR", "GRAD_YEAR","NUM_COHORT","NUM_GRADUATES", "NUM_DROPOUTS","ZIP","LATITUDE","LONGITUDE")
clean.education$GRAD.RATE = clean.education$NUM_GRADUATES/clean.education$NUM.COHORT
clean.education$GRAD_RATE = clean.education$NUM_GRADUATES/clean.education$NUM.COHORT
clean.education$DROP_RATE = clean.education$NUM_DROPOUTS/clean.education$NUM.COHORT
dim(clean.education)
head(clean.education)
colnames(clean.education) =c("ENROLL_YEAR","SCHOOL_NAME", "COHORT_GRAD_YEAR", "GRAD_YEAR","NUM_COHORT","NUM_GRADUATES", "NUM_DROPOUTS","ZIP","LATITUDE","LONGITUDE","GRAD_RATE", "DROP_RATE")
head(clean.education)
colnames(clean.education)# =c("ENROLL_YEAR","SCHOOL_NAME", "COHORT_GRAD_YEAR", "GRAD_YEAR","NUM_COHORT","NUM_GRADUATES", "NUM_DROPOUTS","ZIP","LATITUDE","LONGITUDE")
keep =c( "ENROLL_YEAR", "SCHOOL_NAME", "COHORT_GRAD_YEAR", "GRAD_YEAR","NUM_COHORT","NUM_GRADUATES","NUM_DROPOUTS","GRAD_RATE"        ,"DROP_RATE","ZIP" ,"LATITUDE","LONGITUDE")
clean.education= clean.education[keep]
colnames(clean.education)
write.csv("education-with-zips.csv")
write.csv("clean-education-with-zips.csv")
write.csv(clean.education, "clean-education-with-zips.csv")
View(small.education)
View(clean.education)
setwd("~/Projects/Detroit Project")
crime <- read.csv("crimewithzips.csv")
colnames(crime)
keep = c("YEAR", "ZIP_CHAR")
simple.crime=crime[keep]
colnames(simple.crime)
simple.crime$NUM_CRIMES = 1
colnames(simple.crime)
head(simple.crime)
simple.crime=aggregate(simple.crime$NUM_CRIMES, by=list(simple.crime$YEAR, simple.crime$ZIP_CHAR), FUN=sum)
colnames(simple.crime)
colnames(simple.crime) = c("YEAR", "ZIP", "NUM_CRIMES")
head(simple.crime)
summary(simple.crime)
plot(simple.crime)
colnames(education)
education <- read.csv("clean-education-with-zips.csv")
setwd("~/Projects/Detroit Project/detroit-crime-education/data/clean/Education")
education <- read.csv("clean-education-with-zips.csv")
colnames(education)
plot(simple.crime$NUM_CRIMES, simple.crime$YEAR)
plot(simple.crime$NUM_CRIMES ~simple.crime$YEAR)
plot(simple.crime$NUM_CRIMES ~simple.crime$YEAR, type="box")
plot(simple.crime$NUM_CRIMES ~simple.crime$YEAR, type="boxplot")
boxplot(simple.crime$NUM_CRIMES ~simple.crime, data=simple.crime)
boxplot("NUM_CRIMES" ~"simple.crime", data=simple.crime)
plot(simple.crime$NUM_CRIMES ~simple.crime$YEAR)
library(ggplot2)
p<-ggplot(simple.crime, aes(x="YEAR", y="NUM_CRIMES", color="YEAR")) +
geom_violin(trim=FALSE)
p
p<-ggplot(simple.crime, aes(x=simple.crime$YEAR, y=simple.crime$NUM_CRIMES, color=simple.crime$YEAR)) +
geom_violin(trim=FALSE)
p
head(simple.crime)
simple.crime$YEAR = as.factor(simple.crime$YEAR)
p<-ggplot(simple.crime, aes(x=simple.crime$YEAR, y=simple.crime$NUM_CRIMES, color=simple.crime$YEAR)) +
geom_violin(trim=FALSE)
p
p + stat_summary(fun.y=median, geom="point", size=2, color="red")
p + stat_summary(fun.y=median, geom="point", size=2, color="red") + p + stat_summary(fun.y=mean, geom="point", shape=23, size=2)
p + stat_summary(fun.y=median, geom="point", size=2, color="red") + stat_summary(fun.y=mean, geom="point", shape=23, size=2)
p + stat_summary(fun.y=median, geom="point", size=2, color="white") + stat_summary(fun.y=mean, geom="point", shape=23, size=2)
p + stat_summary(fun.y=median, geom="point", size=2, color="red") + stat_summary(fun.y=mean, geom="point", shape=23, size=2)
p<-ggplot(simple.crime, aes(x=simple.crime$YEAR, y=simple.crime$NUM_CRIMES, color=simple.crime$YEAR)) +  geom_boxplot()
p<-ggplot(simple.crime, aes(x=simple.crime$YEAR, y=simple.crime$NUM_CRIMES, color=simple.crime$YEAR)) +  geom_boxplot()
p
colnames(education)
education$NUM_SCHOOLS= 1
colnames
colnames(education)
keep1= c("ENROLL_YEAR", "COHORT_GRAD_YEAR","NUM_SCHOOLS","NUM_COHORT", "NUM_GRADUATES", "NUM_DROPOUTS", "ZIP")
simple.education1 = education[keep1]
simple.education.enroll = education[keep1]
edu.enroll = education[keep1]
View(education)
edu.enroll=aggregate(edu.enroll, by=list("ENROLL_YEAR","ZIP"), FUN=sum)
edu.enroll=aggregate(edu.enroll, by=list(edu.enroll$ENROLL_YEAR, edu.enroll$ZIP), FUN=sum)
edu.enroll = education[keep1]
edu.enroll=aggregate(edu.enroll, by=list(edu.enroll$ENROLL_YEAR, edu.enroll$ZIP), FUN=sum)
head(edu.enroll)
education
colnames(education)
keep1= c("ENROLL_YEAR", "COHORT_GRAD_YEAR","NUM_SCHOOLS","NUM_COHORT", "NUM_GRADUATES", "NUM_DROPOUTS", "ZIP")
edu.enroll = education[keep1]
edu.enroll
edu.enroll=aggregate(edu.enroll, by=list(edu.enroll$ENROLL_YEAR, edu.enroll$ZIP), FUN=sum)
edu.enroll
keep2= c("GRAD_YEAR","NUM_SCHOOLS","NUM_COHORT", "NUM_GRADUATES", "NUM_DROPOUTS", "ZIP")
edu.grad=aggregate(edu.grad, by=list(edu.grad$GRAD_YEAR, edu.grad$ZIP), FUN=sum)
edu.grad= education[keep]
keep2= c("GRAD_YEAR","NUM_SCHOOLS","NUM_COHORT", "NUM_GRADUATES", "NUM_DROPOUTS", "ZIP")
edu.grad= education[keep]
edu.grad= education[keep2]
edu.grad=aggregate(edu.grad, by=list(edu.grad$GRAD_YEAR, edu.grad$ZIP), FUN=sum)
edu.grad
getwd()
grad.grad.data = Edu.Data
View(grad.grad.data)
grad.grad.data = subset(Edu.Data, select = c("Total.Cohort", "Total.Graduated", "OffTrack.Other", "Dropouts", "gradyear", "enrollyear", "ZIPCode", "Longitude", "Latitude"))
grad.grad.data = subset(Edu.Data, select = c(Total.Cohort, Total.Graduated, OffTrack.Other, Dropouts, gradyear, enrollyear, ZIPCode, Longitude, Latitude))
grad.grad.data = subset(Edu.Data, select = c(Total.Cohort, Total.Graduated, OffTrack.Other, Dropouts, gradyear, enrollyear, ZIP.Code, Longitude, Latitude))
grad.grad.data$Longitude = round(grad.grad.data$Longitude, 2)
grad.grad.data$Latitude = round(grad.grad.data$Latitude, 2)
summary(grad.grad.data)
?aggregate
grad.grad.data.by_year = aggregate(grad.grad.data, by = list(ZIP.Code, Longitude, Latitude, gradyear), FUN = sum)
grad.grad.data.by_year = aggregate(grad.grad.data, by = list(ZIP.Code, Longitude, Latitude, gradyear), data = grad.grad.data, FUN = sum)
grad.grad.data.by_year = aggregate(grad.grad.data, by = list(Longitude, Latitude, gradyear), data = grad.grad.data, FUN = sum)
grad.grad.data.by_year = aggregate(grad.grad.data, by = list(grad.grad.data$ZIP.Code, Longitude, Latitude, gradyear), data = grad.grad.data, FUN = sum)
grad.grad.data.by_year = aggregate(grad.grad.data, by = list(grad.grad.data$ZIP.Code, grad.grad.data$Longitude, grad.grad.data$Latitude, grad.grad.data$gradyear), FUN = sum)
grad.grad.data.overall = aggregate(grad.grad.data, by = list(grad.grad.data$ZIP.Code, grad.grad.data$Longitude, grad.grad.data$Latitude), FUN = sum)
View(grad.grad.data.by_year)
View(grad.grad.data.overall)
grad.grad.data.by_year = grad.grad.data.by_year[, -c("OffTrack.Other", "gradyear", "enrollyear", "ZIP.Code", "Longitude", "Latitude")]
grad.grad.data.by_year = grad.grad.data.by_year[, -c(OffTrack.Other, gradyear, enrollyear, ZIP.Code, Longitude, Latitude)]
grad.grad.data.by_year = grad.grad.data.by_year[, -c(grad.grad.data.by_year$OffTrack.Other, grad.grad.data.by_year$gradyear, grad.grad.data.by_year$enrollyear, grad.grad.data.by_year$ZIP.Code, grad.grad.data.by_year$Longitude, grad.grad.data.by_year$Latitude)]
grad.grad.data.by_year = grad.grad.data.by_year[, -c(7,9,10,11,12,13)]
grad.grad.data.by_year$gradrate = grad.grad.data.by_year$Total.Graduated/grad.grad.data.by_year$Total.Cohort
grad.grad.data.by_year$droprate = grad.grad.data.by_year$Dropouts/grad.grad.data.by_year$Total.Cohort
grad.grad.data.by_year = grad.grad.data.by_year[, -c(5,6,7)]
names(grad.grad.data.by_year) = c("ZIP.Code", "Longitude", "Latitude", "GradYear", "GradRate", "DropRate")
grad.grad.data.overall = aggregate(grad.grad.data, by = list(grad.grad.data$ZIP.Code, grad.grad.data$Longitude, grad.grad.data$Latitude), FUN = sum)
grad.grad.data.overall = grad.grad.data.overall[, -c(7,9,10,11,12,13)]
grad.grad.data.overall$gradrate = grad.grad.data.overall$Total.Graduated/grad.grad.data.overall$Total.Cohort
grad.grad.data.overall$droprate = grad.grad.data.overall$Dropouts/grad.grad.data.overall$Total.Cohort
grad.grad.data.overall = grad.grad.data.overall[, -c(5,6,7)]
grad.grad.data.overall = aggregate(grad.grad.data, by = list(grad.grad.data$ZIP.Code, grad.grad.data$Longitude, grad.grad.data$Latitude), FUN = sum)
grad.grad.data.overall = grad.grad.data.overall[, -c(7,9,10,11,12,13)]
grad.grad.data.overall$gradrate = grad.grad.data.overall$Total.Graduated/grad.grad.data.overall$Total.Cohort
grad.grad.data.overall = aggregate(grad.grad.data, by = list(grad.grad.data$ZIP.Code, grad.grad.data$Longitude, grad.grad.data$Latitude), FUN = sum)
grad.grad.data.overall = grad.grad.data.overall[, -c(6,8,9,10,11,12)]
grad.grad.data.overall$gradrate = grad.grad.data.overall$Total.Graduated/grad.grad.data.overall$Total.Cohort
grad.grad.data.overall$droprate = grad.grad.data.overall$Dropouts/grad.grad.data.overall$Total.Cohort
grad.grad.data.overall = grad.grad.data.overall[, -c(5,6,7)]
names(grad.grad.data.overall) = c("ZIP.Code", "Longitude", "Latitude", "GradYear", "GradRate", "DropRate")
names(grad.grad.data.overall) = c("ZIP.Code", "Longitude", "Latitude", "GradRate", "DropRate")
grad.grad.data.overall = aggregate(grad.grad.data, by = list(grad.grad.data$ZIP.Code, grad.grad.data$Longitude, grad.grad.data$Latitude), FUN = sum)
grad.grad.data.overall = grad.grad.data.overall[, -c(6,8,9,10,11,12)]
grad.grad.data.overall$gradrate = grad.grad.data.overall$Total.Graduated/grad.grad.data.overall$Total.Cohort
grad.grad.data.overall$droprate = grad.grad.data.overall$Dropouts/grad.grad.data.overall$Total.Cohort
grad.grad.data.overall = grad.grad.data.overall[, -c(4,5,6)]
names(grad.grad.data.overall) = c("ZIP.Code", "Longitude", "Latitude", "GradRate", "DropRate")
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.by_year,
aes(x = Longitude, y = Latitude, alpha = GradRate),
fill = 'orange') + geom_point(data = School.Data, show.legend = TRUE, aes(x = Longitude, y = Latitude), col = 'green')
library(ggplot2)
library(ggmap)
Edu.Data = read.csv("data/clean/Education/Education_Data_wLoc.csv")
Map.Wayne.County = get_map(location = c(lon = -83.178249, lat = 42.267666),
zoom = 10)
ggmap(Map.Wayne.County,
extent = "device")
Map.Wayne.County.Toner = get_map(location = c(lon = -83.178249, lat = 42.267666),
zoom = 10,
maptype = 'toner')
ggmap(Map.Wayne.County.Toner,
extent = "device")
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.by_year,
aes(x = Longitude, y = Latitude, alpha = GradRate),
fill = 'orange') + geom_point(data = School.Data, show.legend = TRUE, aes(x = Longitude, y = Latitude), col = 'green')
grad.grad.data = subset(Edu.Data, select = c(Total.Cohort, Total.Graduated, OffTrack.Other, Dropouts, gradyear, enrollyear, ZIP.Code, Longitude, Latitude))
grad.grad.data$Longitude = round(grad.grad.data$Longitude, 1)
grad.grad.data$Latitude = round(grad.grad.data$Latitude, 1)
grad.grad.data.by_year = grad.grad.data.by_year[, -c(7,9,10,11,12,13)]
grad.grad.data.by_year$gradrate = grad.grad.data.by_year$Total.Graduated/grad.grad.data.by_year$Total.Cohort
grad.grad.data.by_year$droprate = grad.grad.data.by_year$Dropouts/grad.grad.data.by_year$Total.Cohort
names(grad.grad.data.by_year) = c("ZIP.Code", "Longitude", "Latitude", "GradYear", "GradRate", "DropRate")
grad.grad.data.overall = aggregate(grad.grad.data, by = list(grad.grad.data$ZIP.Code, grad.grad.data$Longitude, grad.grad.data$Latitude), FUN = sum)
grad.grad.data.overall = grad.grad.data.overall[, -c(6,8,9,10,11,12)]
grad.grad.data.overall$droprate = grad.grad.data.overall$Dropouts/grad.grad.data.overall$Total.Cohort
grad.grad.data.overall = grad.grad.data.overall[, -c(4,5,6)]
names(grad.grad.data.overall) = c("ZIP.Code", "Longitude", "Latitude", "GradRate", "DropRate")
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.by_year,
aes(x = Longitude, y = Latitude, alpha = GradRate),
fill = 'orange') + geom_point(data = School.Data, show.legend = TRUE, aes(x = Longitude, y = Latitude), col = 'green')
grad.grad.data.by_year = aggregate(grad.grad.data, by = list(grad.grad.data$ZIP.Code, grad.grad.data$Longitude, grad.grad.data$Latitude, grad.grad.data$gradyear), FUN = sum)
grad.grad.data.overall$gradrate = grad.grad.data.overall$Total.Graduated/grad.grad.data.overall$Total.Cohort
grad.grad.data.by_year = grad.grad.data.by_year[, -c(5,6,7)]
grad.grad.data = subset(Edu.Data, select = c(Total.Cohort, Total.Graduated, OffTrack.Other, Dropouts, gradyear, enrollyear, ZIP.Code, Longitude, Latitude))
grad.grad.data$Longitude = round(grad.grad.data$Longitude, 2)
grad.grad.data$Latitude = round(grad.grad.data$Latitude, 2)
grad.grad.data.by_year = aggregate(grad.grad.data, by = list(grad.grad.data$ZIP.Code, grad.grad.data$Longitude, grad.grad.data$Latitude, grad.grad.data$gradyear), FUN = sum)
grad.grad.data.by_year = grad.grad.data.by_year[, -c(7,9,10,11,12,13)]
grad.grad.data.by_year$gradrate = grad.grad.data.by_year$Total.Graduated/grad.grad.data.by_year$Total.Cohort
grad.grad.data.by_year$droprate = grad.grad.data.by_year$Dropouts/grad.grad.data.by_year$Total.Cohort
grad.grad.data.by_year = grad.grad.data.by_year[, -c(5,6,7)]
names(grad.grad.data.by_year) = c("ZIP.Code", "Longitude", "Latitude", "GradYear", "GradRate", "DropRate")
grad.grad.data.overall = grad.grad.data.overall[, -c(6,8,9,10,11,12)]
grad.grad.data.overall$gradrate = grad.grad.data.overall$Total.Graduated/grad.grad.data.overall$Total.Cohort
grad.grad.data.overall$droprate = grad.grad.data.overall$Dropouts/grad.grad.data.overall$Total.Cohort
names(grad.grad.data.overall) = c("ZIP.Code", "Longitude", "Latitude", "GradRate", "DropRate")
grad.grad.data.overall = grad.grad.data.overall[, -c(4,5,6)]
grad.grad.data.overall = aggregate(grad.grad.data, by = list(grad.grad.data$ZIP.Code, grad.grad.data$Longitude, grad.grad.data$Latitude), FUN = sum)
grad.grad.data.by_year = aggregate(grad.grad.data, by = list(grad.grad.data$ZIP.Code, grad.grad.data$Longitude, grad.grad.data$Latitude, grad.grad.data$gradyear), FUN = sum)
grad.grad.data.by_year = grad.grad.data.by_year[, -c(7,9,10,11,12,13)]
grad.grad.data.by_year$gradrate = grad.grad.data.by_year$Total.Graduated/grad.grad.data.by_year$Total.Cohort
grad.grad.data.by_year$droprate = grad.grad.data.by_year$Dropouts/grad.grad.data.by_year$Total.Cohort
grad.grad.data.by_year = grad.grad.data.by_year[, -c(5,6,7)]
names(grad.grad.data.by_year) = c("ZIP.Code", "Longitude", "Latitude", "GradYear", "GradRate", "DropRate")
grad.grad.data.overall = aggregate(grad.grad.data, by = list(grad.grad.data$ZIP.Code, grad.grad.data$Longitude, grad.grad.data$Latitude), FUN = sum)
grad.grad.data.overall = grad.grad.data.overall[, -c(6,8,9,10,11,12)]
grad.grad.data.overall$gradrate = grad.grad.data.overall$Total.Graduated/grad.grad.data.overall$Total.Cohort
grad.grad.data.overall$droprate = grad.grad.data.overall$Dropouts/grad.grad.data.overall$Total.Cohort
grad.grad.data.overall = grad.grad.data.overall[, -c(4,5,6)]
names(grad.grad.data.overall) = c("ZIP.Code", "Longitude", "Latitude", "GradRate", "DropRate")
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.by_year,
aes(x = Longitude, y = Latitude, alpha = GradRate),
fill = 'orange') + geom_point(data = School.Data, show.legend = TRUE, aes(x = Longitude, y = Latitude), col = 'green')
grad.grad.data = subset(Edu.Data, select = c(Total.Cohort, Total.Graduated, OffTrack.Other, Dropouts, gradyear, enrollyear, ZIP.Code, Longitude, Latitude))
grad.grad.data$Longitude = round(grad.grad.data$Longitude, 1)
grad.grad.data$Latitude = round(grad.grad.data$Latitude, 1)
grad.grad.data.by_year = aggregate(grad.grad.data, by = list(grad.grad.data$ZIP.Code, grad.grad.data$Longitude, grad.grad.data$Latitude, grad.grad.data$gradyear), FUN = sum)
grad.grad.data.by_year = grad.grad.data.by_year[, -c(7,9,10,11,12,13)]
grad.grad.data.by_year$gradrate = grad.grad.data.by_year$Total.Graduated/grad.grad.data.by_year$Total.Cohort
grad.grad.data.by_year$droprate = grad.grad.data.by_year$Dropouts/grad.grad.data.by_year$Total.Cohort
grad.grad.data.by_year = grad.grad.data.by_year[, -c(5,6,7)]
names(grad.grad.data.by_year) = c("ZIP.Code", "Longitude", "Latitude", "GradYear", "GradRate", "DropRate")
grad.grad.data.overall = aggregate(grad.grad.data, by = list(grad.grad.data$ZIP.Code, grad.grad.data$Longitude, grad.grad.data$Latitude), FUN = sum)
grad.grad.data.overall = grad.grad.data.overall[, -c(6,8,9,10,11,12)]
grad.grad.data.overall$gradrate = grad.grad.data.overall$Total.Graduated/grad.grad.data.overall$Total.Cohort
grad.grad.data.overall$droprate = grad.grad.data.overall$Dropouts/grad.grad.data.overall$Total.Cohort
grad.grad.data.overall = grad.grad.data.overall[, -c(4,5,6)]
names(grad.grad.data.overall) = c("ZIP.Code", "Longitude", "Latitude", "GradRate", "DropRate")
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.by_year,
aes(x = Longitude, y = Latitude, alpha = GradRate),
fill = 'orange') + geom_point(data = School.Data, show.legend = TRUE, aes(x = Longitude, y = Latitude), col = 'green')
grad.grad.data = subset(Edu.Data, select = c(Total.Cohort, Total.Graduated, OffTrack.Other, Dropouts, gradyear, enrollyear, ZIP.Code, Longitude, Latitude))
grad.grad.data$Longitude = round(grad.grad.data$Longitude, 2)
grad.grad.data$Latitude = round(grad.grad.data$Latitude, 2)
grad.grad.data.by_year = aggregate(grad.grad.data, by = list(grad.grad.data$ZIP.Code, grad.grad.data$Longitude, grad.grad.data$Latitude, grad.grad.data$gradyear), FUN = sum)
grad.grad.data.by_year = grad.grad.data.by_year[, -c(7,9,10,11,12,13)]
grad.grad.data.by_year$gradrate = grad.grad.data.by_year$Total.Graduated/grad.grad.data.by_year$Total.Cohort
grad.grad.data.by_year$droprate = grad.grad.data.by_year$Dropouts/grad.grad.data.by_year$Total.Cohort
grad.grad.data.by_year = grad.grad.data.by_year[, -c(5,6,7)]
names(grad.grad.data.by_year) = c("ZIP.Code", "Longitude", "Latitude", "GradYear", "GradRate", "DropRate")
grad.grad.data.overall = aggregate(grad.grad.data, by = list(grad.grad.data$ZIP.Code, grad.grad.data$Longitude, grad.grad.data$Latitude), FUN = sum)
grad.grad.data.overall = grad.grad.data.overall[, -c(6,8,9,10,11,12)]
grad.grad.data.overall$gradrate = grad.grad.data.overall$Total.Graduated/grad.grad.data.overall$Total.Cohort
grad.grad.data.overall$droprate = grad.grad.data.overall$Dropouts/grad.grad.data.overall$Total.Cohort
grad.grad.data.overall = grad.grad.data.overall[, -c(4,5,6)]
names(grad.grad.data.overall) = c("ZIP.Code", "Longitude", "Latitude", "GradRate", "DropRate")
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.by_year,
aes(x = Longitude, y = Latitude, alpha = GradRate),
fill = 'orange') #+ geom_point(data = School.Data, show.legend = TRUE, aes(x = Longitude, y = Latitude), col = 'green')
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.by_year,
aes(x = Longitude, y = Latitude, alpha = GradRate),
fill = 'blue') #+ geom_point(data = School.Data, show.legend = TRUE, aes(x = Longitude, y = Latitude), col = 'green')
?geom_tile
grad.grad.data$Longitude = round(grad.grad.data$Longitude, 2)
grad.grad.data$Latitude = round(grad.grad.data$Latitude, 2)
grad.grad.data.by_year = aggregate(grad.grad.data, by = list(grad.grad.data$ZIP.Code, grad.grad.data$Longitude, grad.grad.data$Latitude, grad.grad.data$gradyear), FUN = sum)
grad.grad.data.by_year = grad.grad.data.by_year[, -c(7,9,10,11,12,13)]
grad.grad.data.by_year$gradrate = grad.grad.data.by_year$Total.Graduated/grad.grad.data.by_year$Total.Cohort
grad.grad.data.by_year$droprate = grad.grad.data.by_year$Dropouts/grad.grad.data.by_year$Total.Cohort
grad.grad.data.by_year = grad.grad.data.by_year[, -c(5,6,7)]
names(grad.grad.data.by_year) = c("ZIP.Code", "Longitude", "Latitude", "GradYear", "GradRate", "DropRate")
grad.grad.data.overall = aggregate(grad.grad.data, by = list(grad.grad.data$ZIP.Code, grad.grad.data$Longitude, grad.grad.data$Latitude), FUN = sum)
grad.grad.data.overall = grad.grad.data.overall[, -c(6,8,9,10,11,12)]
grad.grad.data.overall$gradrate = grad.grad.data.overall$Total.Graduated/grad.grad.data.overall$Total.Cohort
grad.grad.data.overall$droprate = grad.grad.data.overall$Dropouts/grad.grad.data.overall$Total.Cohort
grad.grad.data.overall = grad.grad.data.overall[, -c(4,5,6)]
names(grad.grad.data.overall) = c("ZIP.Code", "Longitude", "Latitude", "GradRate", "DropRate")
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.by_year,
aes(x = Longitude, y = Latitude, alpha = GradRate),
fill = 'blue')
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.by_year,
aes(x = Longitude, y = Latitude, alpha = GradRate),
fill = 'blue') + scale_fill_gradientn(breaks = c(0.05))
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.by_year,
aes(x = Longitude, y = Latitude, alpha = GradRate),
fill = 'blue') + scale_fill_gradientn(colors = c("red", "green"), breaks = c(0.05))
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.by_year,
aes(x = Longitude, y = Latitude, alpha = GradRate),
fill = 'blue') + scale_fill_gradientn(colors = c("yellow", "green", "blue"), breaks = c(0, 0.5, 1))
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.by_year,
aes(x = Longitude, y = Latitude, alpha = GradRate)) + scale_fill_gradientn(colors = c("yellow", "green", "blue"), breaks = c(0, 0.5, 1))
?aes
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.by_year,
aes(x = Longitude, y = Latitude, alpha = GradRate),
fill = 'blue') + scale_fill_manual(colors = c("yellow", "green", "blue"), breaks = c(0, 0.5, 1))
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.by_year,
aes(x = Longitude, y = Latitude, alpha = GradRate),
fill = 'blue') + scale_fill_manual(values = c("yellow", "green", "blue"), breaks = c(0, 0.5, 1))
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.by_year,
aes(x = Longitude, y = Latitude, alpha = GradRate),
fill = 'blue') + scale_fill_gradientn(values = rescale(c(0.5, 0.6, 0.7, 0.8, 0.9, 1.0))) #colors = c("yellow", "green", "blue"), breaks = c(0, 0.5, 1))
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.by_year,
aes(x = Longitude, y = Latitude, alpha = GradRate),
fill = 'blue') + scale_fill_gradientn(values = rescale(c(0.5, 0.6, 0.7, 0.8, 0.9, 1.0) #colors = c("yellow", "green", "blue"), breaks = c(0, 0.5, 1))
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.by_year,
aes(x = Longitude, y = Latitude, alpha = GradRate),
fill = 'blue') + scale_fill_gradientn(values = rescale(c(0.5, 0.6, 0.7, 0.8, 0.9, 1.0), colors = c("yellow", "green", "blue"), breaks = c(0, 0.5, 1)))
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.by_year,
aes(x = Longitude, y = Latitude, alpha = GradRate),
fill = 'blue') + scale_fill_gradientn(values = rescale(c(0.5, 0.6, 0.7, 0.8, 0.9, 1.0), colours = c("yellow", "green", "blue"), breaks = c(0, 0.5, 1)))
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.by_year,
aes(x = Longitude, y = Latitude, alpha = GradRate),
fill = 'blue') + scale_fill_gradientn(colors = c("yellow", "green", "blue"), values = rescale(c(0.5, 0.6, 0.7, 0.8, 0.9, 1.0), breaks = c(0, 0.5, 1)))
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.by_year,
aes(x = Longitude, y = Latitude, alpha = GradRate),
fill = value) + scale_fill_gradientn(colors = c("yellow", "green", "blue"), values = rescale(c(0.5, 0.6, 0.7, 0.8, 0.9, 1.0), breaks = c(0, 0.5, 1)))
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.by_year,
aes(x = Longitude, y = Latitude, alpha = GradRate),
fill = GradRate) + scale_fill_gradientn(colors = c("yellow", "green", "blue"), values = rescale(c(0.5, 0.6, 0.7, 0.8, 0.9, 1.0), breaks = c(0, 0.5, 1)))
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.by_year,
aes(x = Longitude, y = Latitude, alpha = GradRate,
fill = GradRate) + scale_fill_gradientn(colors = c("yellow", "green", "blue"), values = rescale(c(0.5, 0.6, 0.7, 0.8, 0.9, 1.0), breaks = c(0, 0.5, 1)))
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.by_year,
aes(x = Longitude, y = Latitude, alpha = GradRate,
fill = GradRate)) + scale_fill_gradientn(colors = c("yellow", "green", "blue"), values = rescale(c(0.5, 0.6, 0.7, 0.8, 0.9, 1.0), breaks = c(0, 0.5, 1)))
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.by_year,
aes(x = Longitude, y = Latitude, alpha = GradRate),
fill = 'blue')
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.overall,
aes(x = Longitude, y = Latitude, alpha = GradRate),
fill = 'blue')
Map.Wayne.County.Toner = get_map(location = c(lon = -83.178249, lat = 42.267666),
zoom = 11,
maptype = 'toner')
ggmap(Map.Wayne.County.Toner,
extent = "device")
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.overall,
aes(x = Longitude, y = Latitude, alpha = GradRate),
fill = 'blue')
Map.Wayne.County.Toner = get_map(location = "Wayne County",
zoom = 10,
maptype = 'toner')
ggmap(Map.Wayne.County.Toner,
extent = "device")
Map.Wayne.County.Toner = get_map(location = "Wayne County",
zoom = 11,
maptype = 'toner')
ggmap(Map.Wayne.County.Toner,
extent = "device")
?ggmap
ggmap(Map.Wayne.County.Toner,
extent = "normal")
ggmap(Map.Wayne.County.Toner,
extent = "panel")
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.overall,
aes(x = Longitude, y = Latitude, alpha = GradRate),
fill = 'blue')
Map.Wayne.County = get_map(location = c(lon = -83.178249, lat = 42.267666),
zoom = 10)
ggmap(Map.Wayne.County,
extent = "device")
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.overall,
aes(x = Longitude, y = Latitude, alpha = GradRate),
fill = 'blue')
Map.Wayne.County.Toner = get_map(location = c(lon = -83.178249, lat = 42.267666),
zoom = 10,
maptype = 'toner')
ggmap(Map.Wayne.County.Toner,
extent = "device")
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.overall,
aes(x = Longitude, y = Latitude, alpha = GradRate),
fill = 'blue')
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.by_year,
aes(x = Longitude, y = Latitude, alpha = GradRate, fill = 'blue'))
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.by_year,
aes(x = Longitude, y = Latitude, alpha = GradRate, fill = 'blue')) + scale_fill_gradientn(colors = "Yellow", "Green", "Blue", breaks = c(0, 0.5, 1))
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.by_year,
aes(x = Longitude, y = Latitude, alpha = GradRate, fill = GradRate)) + scale_fill_gradientn(colors = "Yellow", "Green", "Blue", breaks = c(0, 0.5, 1))
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.by_year,
aes(x = Longitude, y = Latitude, alpha = GradRate, fill = GradRate)) + scale_fill_gradientn(colors = c("Yellow", "Green", "Blue"), breaks = c(0, 0.5, 1))
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.overall,
aes(x = Longitude, y = Latitude, fill = GradRate)) + scale_fill_gradientn(colors = c("Yellow", "Green", "Blue"), breaks = c(0, 0.5, 1))
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.overall,
aes(x = Longitude, y = Latitude, fill = GradRate)) + scale_fill_gradientn(colors = c("Yellow", "Orange", "Red"), breaks = c(0, 0.5, 1))
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.overall,
aes(x = Longitude, y = Latitude, fill = GradRate)) + scale_fill_gradientn(colors = c("Yellow", "Orange", "DarkRed"), breaks = c(0, 0.5, 1))
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.overall,
aes(x = Longitude, y = Latitude, fill = GradRate)) + scale_fill_gradientn(colors = c("LightYellow", "Orange", "DarkRed"), breaks = c(0, 0.5, 1))
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.overall,
aes(x = Longitude, y = Latitude, fill = GradRate)) + scale_fill_gradientn(colors = c("LightYellow", "Orange", "Red"), breaks = c(0, 0.5, 1))
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.overall,
aes(x = Longitude, y = Latitude, fill = GradRate)) + scale_fill_gradientn(colors = c("LightYellow", "Orange", "Red"), breaks = c(0, 0.33, 0.66))
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.overall,
aes(x = Longitude, y = Latitude, fill = GradRate)) + scale_fill_gradientn(colors = c("LightYellow", "Green", "DarkBlue"), breaks = c(0, 0.33, 0.66))
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.overall,
aes(x = Longitude, y = Latitude, fill = GradRate)) + scale_fill_gradientn(colors = c("Yellow", "Green", "DarkBlue"), breaks = c(0, 0.33, 0.66))
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.overall,
aes(x = Longitude, y = Latitude, fill = GradRate)) + scale_fill_gradientn(colors = c("Yellow", "Green", "DarkBlue"), breaks = c(0, 0.33, 0.66, 1))
?ggsave
i = 2009
ggsave("GGPlot"+i, plot = last_plot(), device = "png")
ggsave("GGPlot"+as.character(i), plot = last_plot(), device = "png")
ggsave(as.character(i), plot = last_plot(), device = "png")
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.by_year[grad.grad.data.by_year$GradYear == 2009],
aes(x = Longitude, y = Latitude, fill = GradRate)) + scale_fill_gradientn(colors = c("Yellow", "Green", "DarkBlue"), breaks = c(0, 0.33, 0.66, 1))
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.by_year[,grad.grad.data.by_year$GradYear == 2009],
aes(x = Longitude, y = Latitude, fill = GradRate)) + scale_fill_gradientn(colors = c("Yellow", "Green", "DarkBlue"), breaks = c(0, 0.33, 0.66, 1))
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.by_year[grad.grad.data.by_year$GradYear == 2009,],
aes(x = Longitude, y = Latitude, fill = GradRate)) + scale_fill_gradientn(colors = c("Yellow", "Green", "DarkBlue"), breaks = c(0, 0.33, 0.66, 1))
for(i in 2009:2015) {
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.by_year[grad.grad.data.by_year$GradYear == 2009,],
aes(x = Longitude, y = Latitude, fill = GradRate)) + scale_fill_gradientn(colors = c("Yellow", "Green", "DarkBlue"), breaks = c(0, 0.33, 0.66, 1))
ggsave(i, plot = last_plot(), device = "png")
}
for(i in 2009:2015) {
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.by_year[grad.grad.data.by_year$GradYear == i,],
aes(x = Longitude, y = Latitude, fill = GradRate)) + scale_fill_gradientn(colors = c("Yellow", "Green", "DarkBlue"), breaks = c(0, 0.33, 0.66, 1))
ggsave(i, plot = last_plot(), device = "png")
}
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.overall,
aes(x = Longitude, y = Latitude, fill = GradRate)) + scale_fill_gradientn(colors = c("Yellow", "Green", "DarkBlue"), breaks = c(0, 0.33, 0.66, 1)) annotate("text", x = c(2,4,6,8), y=13000, label = c("two", "ship", "six", "boat"))
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.overall,
aes(x = Longitude, y = Latitude, fill = GradRate)) + scale_fill_gradientn(colors = c("Yellow", "Green", "DarkBlue"), breaks = c(0, 0.33, 0.66, 1)) + annotate("text", x = c(2,4,6,8), y=13000, label = c("two", "ship", "six", "boat"))
warnings()
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.overall,
aes(x = Longitude, y = Latitude, fill = GradRate)) + scale_fill_gradientn(colors = c("Yellow", "Green", "DarkBlue"), breaks = c(0, 0.33, 0.66, 1)) + annotate("text", x = c(2,4,6,8), y=13000, label = c("two", "ship", "six", "boat"))
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.overall,
aes(x = Longitude, y = Latitude, fill = GradRate, label = GradRate)) + scale_fill_gradientn(colors = c("Yellow", "Green", "DarkBlue"), breaks = c(0, 0.33, 0.66, 1)) + geom_text(check_overlap = TRUE)
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.overall,
aes(x = Longitude, y = Latitude, fill = GradRate, label = rownames(GradRate)) + scale_fill_gradientn(colors = c("Yellow", "Green", "DarkBlue"), breaks = c(0, 0.33, 0.66, 1)) + geom_text(check_overlap = TRUE)
ggsave("Education - Graduation Rate - Overall Year Plot", plot = last_plot(), device = "png")
# Plot of Year-on-year Graduation Rate
for(i in 2009:2015) {
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.by_year[grad.grad.data.by_year$GradYear == i,],
aes(x = Longitude, y = Latitude, fill = GradRate)) + scale_fill_gradientn(colors = c("Yellow", "Green", "DarkBlue"), breaks = c(0, 0.33, 0.66, 1))
ggsave(i, plot = last_plot(), device = "png")
}
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.overall,
aes(x = Longitude, y = Latitude, fill = GradRate, label = rownames(GradRate)) + scale_fill_gradientn(colors = c("Yellow", "Green", "DarkBlue"), breaks = c(0, 0.33, 0.66, 1)) + geom_text(check_overlap = TRUE)
ggsave("Education - Graduation Rate - Overall Year Plot", plot = last_plot(), device = "png")
# Plot of Year-on-year Graduation Rate
for(i in 2009:2015) {
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.by_year[grad.grad.data.by_year$GradYear == i,],
aes(x = Longitude, y = Latitude, fill = GradRate)) + scale_fill_gradientn(colors = c("Yellow", "Green", "DarkBlue"), breaks = c(0, 0.33, 0.66, 1))
ggsave(i, plot = last_plot(), device = "png")
}
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.overall,
aes(x = Longitude, y = Latitude, fill = GradRate, label = rownames(GradRate))) + scale_fill_gradientn(colors = c("Yellow", "Green", "DarkBlue"), breaks = c(0, 0.33, 0.66, 1)) + geom_text(check_overlap = TRUE)
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.overall,
aes(x = Longitude, y = Latitude, fill = GradRate)) + scale_fill_gradientn(colors = c("Yellow", "Green", "DarkBlue"), breaks = c(0, 0.33, 0.66, 1)) + annotate("text", x = -83, y = 42, label = "Overall")
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.overall,
aes(x = Longitude, y = Latitude, fill = GradRate)) + scale_fill_gradientn(colors = c("Yellow", "Green", "DarkBlue"), breaks = c(0, 0.33, 0.66, 1)) + annotate("text", x = -83.2, y = 42, label = "Overall")
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.overall,
aes(x = Longitude, y = Latitude, fill = GradRate)) + scale_fill_gradientn(colors = c("Yellow", "Green", "DarkBlue"), breaks = c(0, 0.33, 0.66, 1)) + annotate("text", x = -82.8, y = 42.1, label = "Overall")
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.overall,
aes(x = Longitude, y = Latitude, fill = GradRate)) + scale_fill_gradientn(colors = c("Yellow", "Green", "DarkBlue"), breaks = c(0, 0.33, 0.66, 1)) + ggtitle("Overall") #annotate("text", x = -82.8, y = 42.1, label = "Overall")
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.overall,
aes(x = Longitude, y = Latitude, fill = GradRate)) + scale_fill_gradientn(colors = c("Yellow", "Green", "DarkBlue"), breaks = c(0, 0.33, 0.66, 1)) + ggtitle("Overall Graduation Rate for Wayne County") #annotate("text", x = -82.8, y = 42.1, label = "Overall")
ggsave("Education - Graduation Rate - Overall Year Plot", plot = last_plot(), device = "png")
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.by_year[grad.grad.data.by_year$GradYear == i,],
aes(x = Longitude, y = Latitude, fill = GradRate)) + scale_fill_gradientn(colors = c("Yellow", "Green", "DarkBlue"), breaks = c(0, 0.33, 0.66, 1)) + ggtitle(paste0("Graduation Rate for Wayne County: ", i, collapse = NULL))
for(i in 2009:2015) {
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.by_year[grad.grad.data.by_year$GradYear == i,],
aes(x = Longitude, y = Latitude, fill = GradRate)) + scale_fill_gradientn(colors = c("Yellow", "Green", "DarkBlue"), breaks = c(0, 0.33, 0.66, 1)) + ggtitle(paste0("Graduation Rate for Wayne County: ", i, collapse = NULL))
ggsave(i, plot = last_plot(), device = "png")
}
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.overall,
aes(x = Longitude, y = Latitude, fill = GradRate)) + scale_fill_gradientn(colors = c("Yellow", "Green", "DarkBlue"), breaks = c(0, 0.33, 0.66, 1)) + ggtitle("Overall Graduation Rate for Wayne County: 2009 - 2015") #+ annotate("text", x = -82.8, y = 42.1, label = "Overall")
ggsave("Education - Graduation Rate - Overall Year Plot.png", plot = last_plot(), device = "png")
for(i in 2009:2015) {
ggmap(Map.Wayne.County.Toner) + geom_tile(data = grad.grad.data.by_year[grad.grad.data.by_year$GradYear == i,],
aes(x = Longitude, y = Latitude, fill = GradRate)) + scale_fill_gradientn(colors = c("Yellow", "Green", "DarkBlue"), breaks = c(0, 0.33, 0.66, 1)) + ggtitle(paste0("Graduation Rate for Wayne County: ", i, collapse = NULL))
ggsave(paste0("Education - Graduation Rate - ", i, " Plot.png", collapse = NULL), plot = last_plot(), device = "png")
}
save.image("E:/Programs/GitHub/R/detroit-crime-education/code/Education/Education Heatmaps Actual.RData")
